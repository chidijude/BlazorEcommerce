@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"/>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />

    </div>
    <button type="Submit" class="btn btn-primary">Submit</button>
    <div class="@mesaageCssClass"> 
        <span>
            @message
        </span>
    </div>
</EditForm>

@code {
    UserRegister user = new();
    string message = string.Empty;
    string mesaageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
        {
            message = result.Message;
            mesaageCssClass = "text-success";
        }
        else
            mesaageCssClass = "text-danger";
    }
}
